{
  "currentUser": {
    "image": {
      "png": "images/avatars/yoda.png"
    },
    "username": "yoda"
  },
  "comments": [
    {
      "id": 1,
      "parentId": null,
      "content": "Incredible implementation! The use of Signals in Angular and hooks in React really shows you‚Äôre keeping up with the latest best practices. Your state management is clean, and your component structure is easy to follow. üëè",
      "createdAt": "2024-05-10T13:49:51.141Z",
      "score": 19,
      "user": {
        "image": {
          "png": "images/avatars/leiaskywalker.png"
        },
        "username": "leiaskywalker"
      },
      "replies": [],
      "body": "Chillax, my Padawans. Much to learn, you have. Focus, you must, on the fundamentals: signals, composability, unidirectional data flow. Excited, I am, to see you use Suspense and SSR! Modern tools, yes, but remember‚Äîthe basics endure. May your code be maintainable, readable, and tested."
    },
    {
      "id": 2,
      "parentId": null,
      "content": "Super cool! How do you decide between React and Angular for a project nowadays? I‚Äôm still learning, but Signals look powerful. Any tips on where to get started with state management in modern apps?",
      "createdAt": "2024-05-12T15:21:31.141Z",
      "score": 14,
      "user": {
        "image": {
          "png": "images/avatars/lukeskywalker.png"
        },
        "username": "lukeskywalker"
      },
      "replies": []
    },
    {
      "id": 3,
      "parentId": 2,
      "content": "Dark side or light, all that matters is efficient, maintainable code. React 19‚Äôs Server Components make SSR and client hydration seamless. Angular‚Äôs Signals change the game for reactivity. Choose what suits your team and business goals.",
      "createdAt": "2024-05-13T17:03:22.141Z",
      "score": 8,
      "replyingTo": "lukeskywalker",
      "user": {
        "image": {
          "png": "images/avatars/vader.png"
        },
        "username": "vader"
      }
    },
    {
      "id": 4,
      "parentId": 2,
      "content": "Modern, your tools may be. Core concepts, unchanged remain: separation of concerns, state flows one way, code reviews help you grow. Frameworks evolve, fundamentals are forever. Hooks, signals, server rendering‚Äîmaster them, you must. Collaborate and share knowledge you should.",
      "createdAt": "2025-05-04T18:01:00.000Z",
      "score": 10,
      "replyingTo": "vader",
      "user": {
        "image": {
          "png": "images/avatars/yoda.png"
        },
        "username": "yoda"
      }
    }
  ]
}